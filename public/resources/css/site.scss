@mixin center-flex {
    display: flex;
    justify-content: center;
    align-items: center;
}

* {
    margin: 0px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-weight: 400;
    box-sizing: border-box !important;
}

:root { 
    --bg: #191B1F;
    --widget-back: #2c2c2c;
    --border-radius: 15px;
    
    color:rgba(255, 255, 255, 0.9);
    font-size: 20px; 
    background: {
        color: var(--bg);
        repeat: no-repeat;
        size: cover;
        position: center;
    }
}

body {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    
    background: radial-gradient(111% 111% at 74.29% -11%, #A93300 0%, #083434 100%), linear-gradient(127.43deg, #00D5C8 0%, #2200AA 100%);
    background-blend-mode: difference, normal;
}

#root {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-auto-rows: minmax(150px, 175px);
    grid-auto-flow: dense;
    flex-direction: column;
    gap: 20px;

    padding: 10px;

    width: 100%;
    max-width: 1800px;
    //min-height: 100vh;

    &.hide-overflow {
        overflow: hidden;
    }
}


svg {  
    display: inline-block;
    width: 1rem; 
}

p {
    margin: 0px;
    line-height: 1;
    height: fit-content;

    >svg {
        vertical-align: middle;
    }
}

.widget {
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    padding: 10px;

    border-radius: var(--border-radius);
    // background-color: var(--widget-back);    
    backdrop-filter: saturate(130%);
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);

    &-large {
        grid-column: span 2;
        grid-row: span 2;
    }

    &-wide {
        grid-column: span 2;
    }

    &-wide-full {
        grid-column: span 6;
    }

    .widget-title {
        display: flex;
        flex-direction: row;
        width: 100%;

        padding-bottom: 10px;
    }
}

//Backdrop filter causes postition fixed to not work
//Following rule works around this for the radar element
#radar.widget {
    backdrop-filter: none;
    &::before {
        content: '';
        position: absolute;
        inset: 0;
        backdrop-filter: saturate(130%);
        border-radius: var(--border-radius);
    }
}


.basic-info {
    @include center-flex;
    flex-direction: column;

    >svg { width: 2.5rem; }

    >p:last-of-type { font-size: 2.5rem; }
}

.hide {
    display: none
}

#loader {
    @include center-flex;

    position: fixed;
    left: 0px;
    right: 0px;
    top: 0px;
    height: 100vh;

    >svg { width: 500px }
}

#offline {
    @include center-flex;
    flex-direction: column;
    
    position: fixed;
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;

    text-align: center;

    >svg { width: 500px }

    >div {
        position: fixed;
        left: 0px;
        right: 0px;
        top: 0px;
        bottom: 0px;

        backdrop-filter: blur(10px);

        @include center-flex;
        flex-direction: column;

        >svg { width: 100px; }
    }
}

//INDIVIDUAL MODULES SHOULD BE PLACED HERE TO ENSURE HIGHEST 
@import 'modules/navbar';
@import 'modules/now';
@import 'modules/alert';
@import 'modules/hourly';
@import 'modules/daily';
@import 'modules/radar';
@import 'modules/level_and_wind';
@import 'modules/suntime';
@import 'modules/modal';

//ALL MEDIA CHANGES SHOULD BE PLACED HERE FOR HIGHEST PRIORITY
@media screen and (min-width: 1500px) {
    #root {
        #radar { grid-column: span 4; }
        #now { grid-column: span 2; }
    }
}

@media screen and (max-width: 1500px) {
    #root {
        grid-template-columns: repeat(6, 1fr);

        #now {
            grid-column: 1/-1;
            order: 1
        }

        #alert {order: 2};
        #hourly, #daily, #radar {order: 3};
        >* {
            order: 4;
        }
    }
}

@media screen and (max-width: 1200px) {
    #root {
        grid-template-columns: repeat(4, 1fr);

        #hourly { grid-column: 1 / -1; }
        #alert + #hourly { grid-column: span 2; }
    }
}

@media screen and (max-width: 800px) {
    #root {
        grid-template-columns: repeat(2, 1fr);
        grid-auto-rows: auto;

        .widget {
            min-height: 200px
        }

        #radar {
            height: 300px;
        }
    }
}

@media screen and (max-width: 500px) {
    :root {
        font-size: 15px;
    }

    #root .widget {
        min-height: 150px
    }
}