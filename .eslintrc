{
    "plugins": [
        "import",
        "simple-import-sort"
    ],
    "extends": [
        "eslint:recommended",
        "react-app",
        "prettier"
    ],
    "rules": {
        "eqeqeq": "error",
        "object-shorthand": "error",
        "object-curly-newline": ["error", { "multiline": true }],
        "@typescript-eslint/object-curly-spacing": ["error", "always"],
        "prefer-const": "error",
        "no-else-return": "error",

        "import/no-cycle": ["error"],
        "import/newline-after-import": ["error", { "count": 2 }],
        "import/no-duplicates": "error",
        "import/consistent-type-specifier-style": ["error", "prefer-top-level"],
        "@typescript-eslint/consistent-type-imports": ["error"],
            
        "simple-import-sort/exports": "error",
        "simple-import-sort/imports": "error",
        
        "react/function-component-definition": "error",
        "react/self-closing-comp": "error",
        "react/jsx-first-prop-new-line": [2, "multiline"],
        "react/destructuring-assignment": "error",
        "react/jsx-no-constructed-context-values": "error"
    },
    "overrides": [
        {
            "files": ["*.ts", "*.tsx"],
            "rules": {
                "simple-import-sort/imports": [
                    "error",
                    {
                        "groups": [
                            // Packages `react` related packages come first.
                            ["^react", "^@?\\w"],
                            // Internal packages.
                            ["^(Hooks)(/.*|$)"],
                            ["^(Contexts)(/.*|$)"],
                            ["^(Components|svgs|App)(/.*|$)"],
                            ["^(ts)(/.*|$)"],
                            // Parent imports. Put `..` last.
                            ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                            // Other relative imports. Put same-folder imports and `.` last.
                            ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"]
                        ]
                    }
                ]
            }
        }
    ],
    "settings": {
        "import/resolver": {
            "typescript": true
        },
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        }
    }
}