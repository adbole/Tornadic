// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Matches default primary snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
  background-color: var(--primary);
  padding: 5px 15px;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<body>
    <div>
      <button
        class="emotion-0 emotion-1"
        type="button"
      >
        Test
      </button>
    </div>
  </body>,
  "container": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
  background-color: var(--primary);
  padding: 5px 15px;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<div>
    <button
      class="emotion-0 emotion-1"
      type="button"
    >
      Test
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Matches the text snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<body>
    <div>
      <button
        class="emotion-0 emotion-1"
        type="button"
      >
        Test
      </button>
    </div>
  </body>,
  "container": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<div>
    <button
      class="emotion-0 emotion-1"
      type="button"
    >
      Test
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Matches the transparent snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
  background-color: transparent;
  box-shadow: none;
  padding: 0;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<body>
    <div>
      <button
        class="emotion-0 emotion-1"
        type="button"
      >
        Test
      </button>
    </div>
  </body>,
  "container": .emotion-0 {
  -webkit-transition: filter 0.3s ease;
  transition: filter 0.3s ease;
  -webkit-filter: brightness(100%);
  filter: brightness(100%);
  border: none;
  border-radius: var(--input-border-radius);
  font-size: inherit;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
  margin: 5px 0px;
  color: inherit;
  background-color: transparent;
  box-shadow: none;
  padding: 0;
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

.emotion-0:active,
.emotion-0:disabled {
  -webkit-filter: brightness(70%);
  filter: brightness(70%);
}

.emotion-0:hover,
.emotion-0:focus {
  cursor: pointer;
}

<div>
    <button
      class="emotion-0 emotion-1"
      type="button"
    >
      Test
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
